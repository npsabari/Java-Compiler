<KEYWORD class><IDENTIFIER BinaryTree><SYMBOL {><KEYWORD public><KEYWORD static><KEYWORD void><IDENTIFIER main><SYMBOL (><IDENTIFIER String><SYMBOL [><SYMBOL ]><IDENTIFIER a><SYMBOL )><SYMBOL {><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><KEYWORD new><IDENTIFIER BT><SYMBOL (><SYMBOL )><SYMBOL .><IDENTIFIER Start><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><SYMBOL }><SYMBOL }><KEYWORD class><IDENTIFIER BT><SYMBOL {><KEYWORD public><KEYWORD int><IDENTIFIER Start><SYMBOL (><SYMBOL )><SYMBOL {><IDENTIFIER Tree><IDENTIFIER root><SYMBOL ;><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD int><IDENTIFIER nti><SYMBOL ;><IDENTIFIER root><OPERATOR =><KEYWORD new><IDENTIFIER Tree><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Init><SYMBOL (><INT 16><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Print><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><INT 100000000><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 8><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Print><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 24><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 4><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 12><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 20><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 28><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Insert><SYMBOL (><INT 14><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Print><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 24><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 12><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 16><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 50><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 12><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Delete><SYMBOL (><INT 12><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER root><SYMBOL .><IDENTIFIER Print><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER root><SYMBOL .><IDENTIFIER Search><SYMBOL (><INT 12><SYMBOL )><SYMBOL )><SYMBOL ;><KEYWORD return><INT 0><SYMBOL ;><SYMBOL }><SYMBOL }><KEYWORD class><IDENTIFIER Tree><SYMBOL {><IDENTIFIER Tree><IDENTIFIER left><SYMBOL ;><IDENTIFIER Tree><IDENTIFIER right><SYMBOL ;><KEYWORD int><IDENTIFIER key><SYMBOL ;><KEYWORD boolean><IDENTIFIER has_left><SYMBOL ;><KEYWORD boolean><IDENTIFIER has_right><SYMBOL ;><IDENTIFIER Tree><IDENTIFIER my_null><SYMBOL ;><KEYWORD public><KEYWORD boolean><IDENTIFIER Init><SYMBOL (><KEYWORD int><IDENTIFIER v_key><SYMBOL )><SYMBOL {><IDENTIFIER key><OPERATOR =><IDENTIFIER v_key><SYMBOL ;><IDENTIFIER has_left><OPERATOR =><BOOLEAN false><SYMBOL ;><IDENTIFIER has_right><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER SetRight><SYMBOL (><IDENTIFIER Tree><IDENTIFIER rn><SYMBOL )><SYMBOL {><IDENTIFIER right><OPERATOR =><IDENTIFIER rn><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER SetLeft><SYMBOL (><IDENTIFIER Tree><IDENTIFIER ln><SYMBOL )><SYMBOL {><IDENTIFIER left><OPERATOR =><IDENTIFIER ln><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><IDENTIFIER Tree><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL {><KEYWORD return><IDENTIFIER right><SYMBOL ;><SYMBOL }><KEYWORD public><IDENTIFIER Tree><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL {><KEYWORD return><IDENTIFIER left><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD int><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL {><KEYWORD return><IDENTIFIER key><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER SetKey><SYMBOL (><KEYWORD int><IDENTIFIER v_key><SYMBOL )><SYMBOL {><IDENTIFIER key><OPERATOR =><IDENTIFIER v_key><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL {><KEYWORD return><IDENTIFIER has_right><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL {><KEYWORD return><IDENTIFIER has_left><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER SetHas_Left><SYMBOL (><KEYWORD boolean><IDENTIFIER val><SYMBOL )><SYMBOL {><IDENTIFIER has_left><OPERATOR =><IDENTIFIER val><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER SetHas_Right><SYMBOL (><KEYWORD boolean><IDENTIFIER val><SYMBOL )><SYMBOL {><IDENTIFIER has_right><OPERATOR =><IDENTIFIER val><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER Compare><SYMBOL (><KEYWORD int><IDENTIFIER num1><SYMBOL ,><KEYWORD int><IDENTIFIER num2><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD int><IDENTIFIER nti><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><BOOLEAN false><SYMBOL ;><IDENTIFIER nti><OPERATOR =><IDENTIFIER num2><OPERATOR +><INT 1><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER num1><OPERATOR <><IDENTIFIER num2><SYMBOL )><IDENTIFIER ntb><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><KEYWORD if><SYMBOL (><OPERATOR !><SYMBOL (><IDENTIFIER num1><OPERATOR <><IDENTIFIER nti><SYMBOL )><SYMBOL )><IDENTIFIER ntb><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><IDENTIFIER ntb><OPERATOR =><BOOLEAN true><SYMBOL ;><KEYWORD return><IDENTIFIER ntb><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER Insert><SYMBOL (><KEYWORD int><IDENTIFIER v_key><SYMBOL )><SYMBOL {><IDENTIFIER Tree><IDENTIFIER new_node><SYMBOL ;><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD boolean><IDENTIFIER cont><SYMBOL ;><KEYWORD int><IDENTIFIER key_aux><SYMBOL ;><IDENTIFIER Tree><IDENTIFIER current_node><SYMBOL ;><IDENTIFIER new_node><OPERATOR =><KEYWORD new><IDENTIFIER Tree><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER new_node><SYMBOL .><IDENTIFIER Init><SYMBOL (><IDENTIFIER v_key><SYMBOL )><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><KEYWORD this><SYMBOL ;><IDENTIFIER cont><OPERATOR =><BOOLEAN true><SYMBOL ;><KEYWORD while><SYMBOL (><IDENTIFIER cont><SYMBOL )><SYMBOL {><IDENTIFIER key_aux><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER v_key><OPERATOR <><IDENTIFIER key_aux><SYMBOL )><SYMBOL {><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD else><SYMBOL {><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER SetHas_Left><SYMBOL (><BOOLEAN true><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER SetLeft><SYMBOL (><IDENTIFIER new_node><SYMBOL )><SYMBOL ;><SYMBOL }><SYMBOL }><KEYWORD else><SYMBOL {><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD else><SYMBOL {><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER SetHas_Right><SYMBOL (><BOOLEAN true><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER SetRight><SYMBOL (><IDENTIFIER new_node><SYMBOL )><SYMBOL ;><SYMBOL }><SYMBOL }><SYMBOL }><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER Delete><SYMBOL (><KEYWORD int><IDENTIFIER v_key><SYMBOL )><SYMBOL {><IDENTIFIER Tree><IDENTIFIER current_node><SYMBOL ;><IDENTIFIER Tree><IDENTIFIER parent_node><SYMBOL ;><KEYWORD boolean><IDENTIFIER cont><SYMBOL ;><KEYWORD boolean><IDENTIFIER found><SYMBOL ;><KEYWORD boolean><IDENTIFIER is_root><SYMBOL ;><KEYWORD int><IDENTIFIER key_aux><SYMBOL ;><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><KEYWORD this><SYMBOL ;><IDENTIFIER parent_node><OPERATOR =><KEYWORD this><SYMBOL ;><IDENTIFIER cont><OPERATOR =><BOOLEAN true><SYMBOL ;><IDENTIFIER found><OPERATOR =><BOOLEAN false><SYMBOL ;><IDENTIFIER is_root><OPERATOR =><BOOLEAN true><SYMBOL ;><KEYWORD while><SYMBOL (><IDENTIFIER cont><SYMBOL )><SYMBOL {><IDENTIFIER key_aux><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER v_key><OPERATOR <><IDENTIFIER key_aux><SYMBOL )><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER parent_node><OPERATOR =><IDENTIFIER current_node><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL ;><SYMBOL }><KEYWORD else><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><KEYWORD if><SYMBOL (><IDENTIFIER key_aux><OPERATOR <><IDENTIFIER v_key><SYMBOL )><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER parent_node><OPERATOR =><IDENTIFIER current_node><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL ;><SYMBOL }><KEYWORD else><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><SYMBOL {><KEYWORD if><SYMBOL (><IDENTIFIER is_root><SYMBOL )><KEYWORD if><SYMBOL (><SYMBOL (><OPERATOR !><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><OPERATOR &><SYMBOL (><OPERATOR !><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL )><IDENTIFIER ntb><OPERATOR =><BOOLEAN true><SYMBOL ;><KEYWORD else><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER Remove><SYMBOL (><IDENTIFIER parent_node><SYMBOL ,><IDENTIFIER current_node><SYMBOL )><SYMBOL ;><KEYWORD else><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER Remove><SYMBOL (><IDENTIFIER parent_node><SYMBOL ,><IDENTIFIER current_node><SYMBOL )><SYMBOL ;><IDENTIFIER found><OPERATOR =><BOOLEAN true><SYMBOL ;><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><SYMBOL }><IDENTIFIER is_root><OPERATOR =><BOOLEAN false><SYMBOL ;><SYMBOL }><KEYWORD return><IDENTIFIER found><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER Remove><SYMBOL (><IDENTIFIER Tree><IDENTIFIER p_node><SYMBOL ,><IDENTIFIER Tree><IDENTIFIER c_node><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD int><IDENTIFIER auxkey1><SYMBOL ;><KEYWORD int><IDENTIFIER auxkey2><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER RemoveLeft><SYMBOL (><IDENTIFIER p_node><SYMBOL ,><IDENTIFIER c_node><SYMBOL )><SYMBOL ;><KEYWORD else><KEYWORD if><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER RemoveRight><SYMBOL (><IDENTIFIER p_node><SYMBOL ,><IDENTIFIER c_node><SYMBOL )><SYMBOL ;><KEYWORD else><SYMBOL {><IDENTIFIER auxkey1><OPERATOR =><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL ;><IDENTIFIER auxkey2><OPERATOR =><SYMBOL (><IDENTIFIER p_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD if><SYMBOL (><KEYWORD this><SYMBOL .><IDENTIFIER Compare><SYMBOL (><IDENTIFIER auxkey1><SYMBOL ,><IDENTIFIER auxkey2><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetLeft><SYMBOL (><IDENTIFIER my_null><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetHas_Left><SYMBOL (><BOOLEAN false><SYMBOL )><SYMBOL ;><SYMBOL }><KEYWORD else><SYMBOL {><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetRight><SYMBOL (><IDENTIFIER my_null><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetHas_Right><SYMBOL (><BOOLEAN false><SYMBOL )><SYMBOL ;><SYMBOL }><SYMBOL }><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER RemoveRight><SYMBOL (><IDENTIFIER Tree><IDENTIFIER p_node><SYMBOL ,><IDENTIFIER Tree><IDENTIFIER c_node><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD while><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER ntb><OPERATOR =><IDENTIFIER c_node><SYMBOL .><IDENTIFIER SetKey><SYMBOL (><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER p_node><OPERATOR =><IDENTIFIER c_node><SYMBOL ;><IDENTIFIER c_node><OPERATOR =><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL ;><SYMBOL }><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetRight><SYMBOL (><IDENTIFIER my_null><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetHas_Right><SYMBOL (><BOOLEAN false><SYMBOL )><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER RemoveLeft><SYMBOL (><IDENTIFIER Tree><IDENTIFIER p_node><SYMBOL ,><IDENTIFIER Tree><IDENTIFIER c_node><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD while><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER ntb><OPERATOR =><IDENTIFIER c_node><SYMBOL .><IDENTIFIER SetKey><SYMBOL (><SYMBOL (><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><IDENTIFIER p_node><OPERATOR =><IDENTIFIER c_node><SYMBOL ;><IDENTIFIER c_node><OPERATOR =><IDENTIFIER c_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL ;><SYMBOL }><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetLeft><SYMBOL (><IDENTIFIER my_null><SYMBOL )><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><IDENTIFIER p_node><SYMBOL .><IDENTIFIER SetHas_Left><SYMBOL (><BOOLEAN false><SYMBOL )><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD int><IDENTIFIER Search><SYMBOL (><KEYWORD int><IDENTIFIER v_key><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER cont><SYMBOL ;><KEYWORD int><IDENTIFIER ifound><SYMBOL ;><IDENTIFIER Tree><IDENTIFIER current_node><SYMBOL ;><KEYWORD int><IDENTIFIER key_aux><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><KEYWORD this><SYMBOL ;><IDENTIFIER cont><OPERATOR =><BOOLEAN true><SYMBOL ;><IDENTIFIER ifound><OPERATOR =><INT 0><SYMBOL ;><KEYWORD while><SYMBOL (><IDENTIFIER cont><SYMBOL )><SYMBOL {><IDENTIFIER key_aux><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER v_key><OPERATOR <><IDENTIFIER key_aux><SYMBOL )><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD else><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><KEYWORD if><SYMBOL (><IDENTIFIER key_aux><OPERATOR <><IDENTIFIER v_key><SYMBOL )><KEYWORD if><SYMBOL (><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><IDENTIFIER current_node><OPERATOR =><IDENTIFIER current_node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL ;><KEYWORD else><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><KEYWORD else><SYMBOL {><IDENTIFIER ifound><OPERATOR =><INT 1><SYMBOL ;><IDENTIFIER cont><OPERATOR =><BOOLEAN false><SYMBOL ;><SYMBOL }><SYMBOL }><KEYWORD return><IDENTIFIER ifound><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER Print><SYMBOL (><SYMBOL )><SYMBOL {><IDENTIFIER Tree><IDENTIFIER current_node><SYMBOL ;><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><IDENTIFIER current_node><OPERATOR =><KEYWORD this><SYMBOL ;><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER RecPrint><SYMBOL (><IDENTIFIER current_node><SYMBOL )><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><KEYWORD public><KEYWORD boolean><IDENTIFIER RecPrint><SYMBOL (><IDENTIFIER Tree><IDENTIFIER node><SYMBOL )><SYMBOL {><KEYWORD boolean><IDENTIFIER ntb><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER node><SYMBOL .><IDENTIFIER GetHas_Left><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER RecPrint><SYMBOL (><IDENTIFIER node><SYMBOL .><IDENTIFIER GetLeft><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><SYMBOL }><KEYWORD else><IDENTIFIER ntb><OPERATOR =><BOOLEAN true><SYMBOL ;><IDENTIFIER System><SYMBOL .><IDENTIFIER out><SYMBOL .><IDENTIFIER println><SYMBOL (><IDENTIFIER node><SYMBOL .><IDENTIFIER GetKey><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><KEYWORD if><SYMBOL (><IDENTIFIER node><SYMBOL .><IDENTIFIER GetHas_Right><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL {><IDENTIFIER ntb><OPERATOR =><KEYWORD this><SYMBOL .><IDENTIFIER RecPrint><SYMBOL (><IDENTIFIER node><SYMBOL .><IDENTIFIER GetRight><SYMBOL (><SYMBOL )><SYMBOL )><SYMBOL ;><SYMBOL }><KEYWORD else><IDENTIFIER ntb><OPERATOR =><BOOLEAN true><SYMBOL ;><KEYWORD return><BOOLEAN true><SYMBOL ;><SYMBOL }><SYMBOL }>